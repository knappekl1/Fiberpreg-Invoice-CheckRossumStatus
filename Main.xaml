<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.TabConfirmedEnabled="True" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="TabConfirmedEnabled" Type="InArgument(x:Boolean)" />
    <x:Property Name="out_AutoVerified" Type="OutArgument(x:String)" />
    <x:Property Name="out_ManualVerify" Type="OutArgument(x:String)" />
    <x:Property Name="out_WaitingForRobot" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2154,1187.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="43">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Web</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Entire Process" sap:VirtualizedContainerService.HintSize="480.666666666667,1020" sap2010:WorkflowViewState.IdRef="Sequence_44">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="https://api.elis.rossum.ai/v1" Name="Endpoint" />
      <Variable x:TypeArguments="njl:JObject" Name="ConfigObj" />
      <Variable x:TypeArguments="x:Int32" Name="FilesToReview" />
      <Variable x:TypeArguments="x:Int32" Name="FilesReviewed" />
      <Variable x:TypeArguments="x:Int32" Name="ImportedFiles" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438.666666666667,928" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="This workflow logs to ELIS using credentials provided in 'credentials.json'. It can validate imported documents based on the logic provided in 'Automatic Verification' (see placeholder). Without providing the customized logic, this workflow validates all documents by default. " DisplayName="Check Rossum status" sap:VirtualizedContainerService.HintSize="882,5426" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="loginID" />
            <Variable x:TypeArguments="njl:JObject" Name="FolderPathJOBJ" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Login" sap:VirtualizedContainerService.HintSize="840,1860.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="loginString" />
              <Variable x:TypeArguments="njl:JObject" Name="objJson" />
              <Variable x:TypeArguments="x:String" Name="ConfigString" />
              <Variable x:TypeArguments="x:Int32" Name="StatusCode" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="798,68" sap2010:WorkflowViewState.IdRef="ReportStatus_1" StatusText="[&quot;Logging to AI Engine...&quot;]" />
            <ui:ReadTextFile Content="[ConfigString]" DisplayName="Read Text File" FileName="Data\Config.json" sap:VirtualizedContainerService.HintSize="798,80.6666666666667" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize Config JSON" sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[ConfigObj]" JsonString="[ConfigString]" />
            <Sequence sap2010:Annotation.AnnotationText="Delete existing and Download from storage" DisplayName="Initialize FolderInfo" sap:VirtualizedContainerService.HintSize="798,621.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_36">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="FolderPathData" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[File.Exists(&quot;Data\FolderPathData.json&quot;)]" DisplayName="If File Exists" sap:VirtualizedContainerService.HintSize="484,214" sap2010:WorkflowViewState.IdRef="If_17">
                <If.Then>
                  <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_2" Path="Data\FolderPathData.json" />
                </If.Then>
              </If>
              <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="Data\FolderPathData.json" DisplayName="Download Storage File" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_1" Path="FolderLocationData.json" StorageBucketName="[ConfigObj.Item(&quot;BucketStorageName&quot;).ToString]" />
              <ui:ReadTextFile Content="[FolderPathData]" DisplayName="Read Text File" FileName="Data\FolderPathData.json" sap:VirtualizedContainerService.HintSize="484,80.6666666666667" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize FolderPath JSON" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[FolderPathJOBJ]" JsonString="[FolderPathData]" />
            </Sequence>
            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[ConfigObj.Item(&quot;LoginDataStorage&quot;).ToString]" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="798,22" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
              <ui:GetRobotAsset.Value>
                <OutArgument x:TypeArguments="x:String">[loginString]</OutArgument>
              </ui:GetRobotAsset.Value>
            </ui:GetRobotAsset>
            <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[loginString]" BodyFormat="application/json" DisplayName="HTTP Request - LOGIN" EndPoint="[Endpoint + &quot;/auth/login&quot;]" sap:VirtualizedContainerService.HintSize="798,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[loginID]" StatusCode="[StatusCode]" TimeoutMS="20000">
              <ui:HttpClient.Attachments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Cookies>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Cookies>
              <ui:HttpClient.Headers>
                <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
            </ui:HttpClient>
            <If Condition="[StatusCode = 200]" DisplayName="If Login Success" sap:VirtualizedContainerService.HintSize="798,448.666666666667" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Sequence DisplayName="Log Success" sap:VirtualizedContainerService.HintSize="376,294.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_45">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="ReportStatus_2" StatusText="[&quot;Account Logged in&quot;]" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[&quot;Logged-in to Rossum&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Log Error and Throw" sap:VirtualizedContainerService.HintSize="376,248.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[&quot;Could not login to Rossum&quot;]" />
                  <Throw Exception="[New SystemException(&quot;Login Failed&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                </Sequence>
              </If.Else>
            </If>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[objJson]" JsonString="[loginID]" />
            <Assign sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[loginID]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[objJson("key").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Automatic Verification" sap:VirtualizedContainerService.HintSize="840,3388" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="authKey" />
              <Variable x:TypeArguments="x:String" Name="ResultJSON" />
              <Variable x:TypeArguments="njl:JObject" Name="objJSON" />
              <Variable x:TypeArguments="x:String" Name="QueueID" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Create AuthKey" sap:VirtualizedContainerService.HintSize="652.666666666667,252.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Create Authorization Key" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[authKey]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Token LOGIN_ID</InArgument>
                </Assign.Value>
              </Assign>
              <ui:Replace DisplayName="Insert LoginID to authKey" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[authKey]" IsBuilderTabModified="False" Pattern="LOGIN_ID" RegexOption="IgnoreCase, Compiled" Replacement="[loginID]" Result="[authKey]" />
            </Sequence>
            <Sequence DisplayName="Get Queue ID" sap:VirtualizedContainerService.HintSize="652.666666666667,348.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="JsonQueues" />
                <Variable x:TypeArguments="njl:JObject" Name="JsonObjQueue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="application/json" DisplayName="HTTP Request - LIST QUEUES" EndPoint="[Endpoint +&quot;\queues&quot;]" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" Result="[JsonQueues]" TimeoutMS="20000">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:HttpClient>
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[JsonObjQueue]" JsonString="[JsonQueues]" />
              <Assign DisplayName="Get Queue ID" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[QueueID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[JsonObjQueue("results")(0)("id").ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <Sequence DisplayName="List documents" sap:VirtualizedContainerService.HintSize="652.666666666667,2614.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="610.666666666667,68" sap2010:WorkflowViewState.IdRef="ReportStatus_3" StatusText="[&quot;Waiting for Uploads&quot;]" />
              <DoWhile sap2010:Annotation.AnnotationText="Waits until the documments are uploaded and read by Rossum Elis." DisplayName="Wait for Upload" sap:VirtualizedContainerService.HintSize="610.666666666667,1092" sap2010:WorkflowViewState.IdRef="DoWhile_1">
                <DoWhile.Variables>
                  <Variable x:TypeArguments="x:Int32" Default="0" Name="WaitCounter" />
                  <Variable x:TypeArguments="x:Int32" Name="ImportingFilesCount" />
                </DoWhile.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <DoWhile.Condition>
                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="ImportingFilesCount &lt;&gt; 0" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                </DoWhile.Condition>
                <Sequence sap:VirtualizedContainerService.HintSize="564,893.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="multipart/json" DisplayName="HTTP Request - LIST Importing Docs" EndPoint="[Endpoint + &quot;/annotations?page_size=50&amp;status=importing&amp;queue=&quot;+ QueueID]" sap:VirtualizedContainerService.HintSize="522,52.6666666666667" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="GET" Result="[ResultJSON]" TimeoutMS="20000">
                    <ui:HttpClient.Attachments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Attachments>
                    <ui:HttpClient.Cookies>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Cookies>
                    <ui:HttpClient.Headers>
                      <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                    </ui:HttpClient.Headers>
                    <ui:HttpClient.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Parameters>
                    <ui:HttpClient.UrlSegments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.UrlSegments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:HttpClient>
                  <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="522,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[objJSON]" JsonString="[ResultJSON]" />
                  <Assign sap:VirtualizedContainerService.HintSize="522,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[ImportingFilesCount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[objJSON("results").Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[WaitCounter=0 AND ImportingFilesCount&lt;&gt;0]" DisplayName="Log waiting time notice" sap:VirtualizedContainerService.HintSize="522,340.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,186.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Waiting for &quot;+ImportingFilesCount.ToString+&quot; document(s) being imported...&quot;]" />
                      </Sequence>
                    </If.Then>
                  </If>
                  <Assign DisplayName="Increase WaitCounter" sap:VirtualizedContainerService.HintSize="522,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[WaitCounter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[WaitCounter+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="522,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                </Sequence>
              </DoWhile>
              <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Gets list of files in Postponed state  in ELis" BodyFormat="multipart/json" DisplayName="HTTP Request - LIST DOCS" EndPoint="[Endpoint + &quot;/annotations?status=to_review&amp;page_size=50&amp;queue=&quot;+ QueueID]" sap:VirtualizedContainerService.HintSize="610.666666666667,67.3333333333333" sap2010:WorkflowViewState.IdRef="HttpClient_14" Method="GET" Result="[ResultJSON]" TimeoutMS="20000">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:HttpClient>
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_8" JsonObject="[objJSON]" JsonString="[ResultJSON]" />
              <Assign DisplayName="Count Imported Files to Review" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_65">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[ImportedFiles]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[objJSON("results").Count]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="610.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;No. of files to review by the Bot: &quot; + ImportedFiles.ToString]" />
              <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Gets list of files in Postponed state  in ELis" BodyFormat="multipart/json" DisplayName="HTTP Request - LIST DOCS" EndPoint="[Endpoint + &quot;/annotations?status=postponed&amp;page_size=50&amp;queue=&quot;+ QueueID]" sap:VirtualizedContainerService.HintSize="610.666666666667,67.3333333333333" sap2010:WorkflowViewState.IdRef="HttpClient_4" Method="GET" Result="[ResultJSON]" TimeoutMS="20000">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:HttpClient>
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[objJSON]" JsonString="[ResultJSON]" />
              <Assign DisplayName="Count Files to Review" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[FilesToReview]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[objJSON("results").Count]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Gets list of files in Confirmed state  in ELis" BodyFormat="multipart/json" DisplayName="HTTP Request - LIST DOCS" EndPoint="[Endpoint + &quot;/annotations?status=confirmed&amp;page_size=50&amp;queue=&quot;&amp; QueueID]" sap:VirtualizedContainerService.HintSize="610.666666666667,67.3333333333333" sap2010:WorkflowViewState.IdRef="HttpClient_13" Method="GET" Result="[ResultJSON]" TimeoutMS="20000">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:HttpClient>
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_7" JsonObject="[objJSON]" JsonString="[ResultJSON]" />
              <Assign DisplayName="Count Files to Reviewed" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_64">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[FilesReviewed]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[objJSON("results").Count]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[ResultJSON.ToString.Contains(&quot;authentication_failed&quot;)]" DisplayName="Stop if wrong credentials " sap:VirtualizedContainerService.HintSize="610.666666666667,214" sap2010:WorkflowViewState.IdRef="If_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Throw Exception="[New Exception(&quot;Wrong credentials&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </If.Then>
              </If>
            </Sequence>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Log Error and send Notification" sap:VirtualizedContainerService.HintSize="376,186.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_49">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Warn" Message="[exception.Message + &quot; at: &quot; + exception.Source]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Logout" sap:VirtualizedContainerService.HintSize="380,690" sap2010:WorkflowViewState.IdRef="Sequence_46">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="loginJson" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="338,68" sap2010:WorkflowViewState.IdRef="ReportStatus_6" StatusText="[&quot;Logging out Account....&quot;]" />
          <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Result="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[loginJson]" BodyFormat="application/json" DisplayName="HTTP Request - LOGOUT" EndPoint="[Endpoint + &quot;/auth/logout&quot;]" sap:VirtualizedContainerService.HintSize="338,22" sap2010:WorkflowViewState.IdRef="HttpClient_12" Method="POST" TimeoutMS="20000">
            <ui:HttpClient.Attachments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Attachments>
            <ui:HttpClient.Cookies>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Cookies>
            <ui:HttpClient.Headers>
              <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
            </ui:HttpClient.Headers>
            <ui:HttpClient.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Parameters>
            <ui:HttpClient.UrlSegments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.UrlSegments>
          </ui:HttpClient>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,158.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_AutoVerified]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[FilesReviewed.ToString + " dokumentů"]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ManualVerify]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[FilesToReview.ToString + " dokumentů"]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_WaitingForRobot]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[ImportedFiles.ToString + " dokumentů čeká na kontrolu robotem"]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[out_AutoVerified + VbCr + out_ManualVerify + VbCr + out_WaitingForRobot]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Trace" Message="[&quot;Acount logged out.&quot;]" />
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>